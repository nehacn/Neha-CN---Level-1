#include<stdio.h>
typedef struct
{
	char name[10];
	int mins_worked;
}time_cards;

typedef struct 
{
	char employee_name[10];
	float hourly_wage;
	int n_time_cards;
	time_cards t[10];
	float hours_worked;
	float mins_worked;
	float total_time;
	float gross_pay;
}employee;

int input_n()
{
	int n;
	printf("\n Enter the number of employees(<=20) = ");
	scanf("%d",&n);
	if(n<=20)
		return n;
	else
		printf("Wrong input");
	return 0;	
}

employee input_employee()
{
	employee emp;
	printf("\n Enter employee's name and hourly wage =");
   	scanf("%s %f",&emp.employee_name,&emp.hourly_wage);
   	return emp;
}

void input_n_employee(int n,employee emp[n])
{
    for(int i=0;i<n;i++)
    {
        emp[i] = input_employee();
    }
}

time_cards input_time_cards()
{	
    time_cards t;
    printf("\n Enter the employee's name and corresponding minutes worked = ");
    scanf("%s %d",&t.name,&t.mins_worked);
    return t;
}

void input_n_time_cards(int n,employee emp[n])
{
    printf("\n Enter number of time cards = ");
    scanf("%d",&emp->n_time_cards);
    for(int i=0; i<emp->n_time_cards; i++)
    {
    	emp->t[i] = input_time_cards();
    }
}

void compute_time_cards(time_cards *t,employee *emp)
{
    if(strcmp(emp->employee_name,t->name)==0)
    {
            emp->hours_worked = t->mins_worked / 60;
            emp->mins_worked = t->mins_worked % 60;
            emp->total_time = emp->hours_worked + (emp->mins_worked/100);
    	if(emp->total_time > 40)
    		emp->gross_pay = 1.5 * emp->hourly_wage * emp->total_time;
    	else
    		emp->gross_pay = 1 * emp->hourly_wage * emp->total_time;
    }
}

void compute_employee(employee *emp)
{
    for(int i=0;i<emp->n_time_cards;i++)
    {
        compute_time_cards(&emp->t[i],emp);
    }
}

void compute_n_employee(int n,employee emp[n])
{
	for(int i=0;i<n;i++)
	{
		compute_employee(&emp[i]);
	}
}

void output_employee(employee emp)
{
	printf("\n%s: %.2f , $%.2f", emp.employee_name,emp.hours_worked,emp.gross_pay);
}

void output_n_employee(int n,employee emp[n])
{
	for(int i=0;i<n;i++)
	{
		output_employee(emp[i]);
	}
}
 
int main()
{
	int n;
	n = input_n();
	employee emp[n];
	input_n_employee(n,emp);
	input_n_time_cards(n,emp);
	compute_n_employee(n,emp);
	output_n_employee(n,emp);
	return 0;
}
